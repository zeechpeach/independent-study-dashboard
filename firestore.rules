rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    function isSignedIn() { return request.auth != null; }
    function isZeechAdvisor() { return isSignedIn() && request.auth.token.email == 'zchien@bwscampus.com'; }
    function isAdmin() { return isSignedIn() && request.auth.token.email == 'zchien@bwscampus.com'; }
    
    // Simplified advisor access check - zeech gets full access, others filtered by ownership
    function hasAdvisorAccess(userId) {
      return isZeechAdvisor() || request.auth.uid == userId;
    }
    
    // Users collection - advisor can read all, others read their own and write self
    match /users/{userId} {
      allow read: if isSignedIn() && (isZeechAdvisor() || request.auth.uid == userId);
      allow write: if isZeechAdvisor() || request.auth.uid == userId;
    }
    
    // Important dates collection - advisor can manage all, students can manage their own
    match /importantDates/{dateId} {
      allow read: if isSignedIn() && (
        isZeechAdvisor() || 
        !exists(/databases/$(database)/documents/importantDates/$(dateId)) ||
        resource.data.scope != 'student' || 
        resource.data.studentId == request.auth.uid
      );
      allow create: if isSignedIn() && (
        isZeechAdvisor() || 
        (request.resource.data.scope == 'student' && request.resource.data.studentId == request.auth.uid)
      );
      allow update, delete: if isSignedIn() && (
        isZeechAdvisor() || 
        (resource.data.scope == 'student' && resource.data.studentId == request.auth.uid)
      );
    }
    
    // Meetings collection - advisor can read all, students can CRUD their own
    match /meetings/{meetingId} {
      allow read: if isSignedIn() && hasAdvisorAccess(resource.data.studentId);
      allow create, update, delete: if isSignedIn() && hasAdvisorAccess(resource.data.studentId);
    }
    
    // Reflections collection - advisor can read all, students can CRUD their own  
    match /reflections/{reflectionId} {
      allow read: if isSignedIn() && hasAdvisorAccess(resource.data.userId);
      allow create, update, delete: if isSignedIn() && hasAdvisorAccess(resource.data.userId);
    }
    
    // Goals collection - advisor can read all, students can CRUD their own
    match /goals/{goalId} {
      allow read: if isSignedIn() && hasAdvisorAccess(resource.data.userId);
      allow create, update, delete: if isSignedIn() && hasAdvisorAccess(resource.data.userId);
    }
    
    // Advisor pathways collection - advisor can manage their own
    match /advisor_pathways/{pathwayId} {
      allow read: if isSignedIn();
      allow write: if isZeechAdvisor();
    }
    
    // Calendly events and related collections - allow access for authenticated users
    match /calendly_events/{eventId} {
      allow read, write: if isSignedIn();
    }
    
    // Project groups collection - advisor can manage their own groups
    match /projectGroups/{groupId} {
      allow read: if isSignedIn();
      allow create, update, delete: if isZeechAdvisor();
    }
    
    // Any other collections - restrict to advisor only for security
    match /{document=**} {
      allow read, write: if isZeechAdvisor();
    }
  }
}